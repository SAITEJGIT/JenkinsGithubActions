name: CI/CD Pipeline

on:
  push:
    branches:
      - production
      - staging
      - master
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'  # Specify the Python version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest --maxfail=1 --disable-warnings -q

      - name: Build Application
        run: |
          echo "Building application..."

  generate_tag:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main'
    steps:
      - name: Generate Unique Tag
        id: generate_tag
        run: |
          TIMESTAMP=$(date +'%Y%m%d%H%M%S')
          UNIQUE_TAG="v${TIMESTAMP}"
          echo "Generated tag: $UNIQUE_TAG"
          echo "TAG=$UNIQUE_TAG" >> $GITHUB_ENV

      - name: Create and Push Tag
        run: |
          git tag $TAG
          git push origin $TAG

  deploy_staging:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/staging'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Staging
        run: |
          echo "Deploying to Staging..."
          # Replace the following with your actual deployment steps for staging
  
  deploy_main:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to main
        run: |
          echo "Deploying to main..."

  deploy_master:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Staging
        run: |
          echo "Deploying to master..."
          # Replace the following with your actual deployment steps for master

  deploy_production:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Production
        run: |
          echo "Deploying to Production..."
          # Replace the following with your actual deployment steps for production
